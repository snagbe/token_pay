#!/usr/bin/env python3

# Import
import board
import digitalio
import time
from PIL import Image, ImageDraw, ImageFont
import adafruit_ssd1306
from mfrc522 import SimpleMFRC522
import RPi.GPIO as GPIO
import psycopg2

reader = SimpleMFRC522()

GPIO.setup(14, GPIO.OUT, initial=GPIO.LOW)

# Korrekte Bildschirmgrösse des Displays definieren
WIDTH = 128
HEIGHT = 64
         
# Einsatz vom I2C.
i2c = board.I2C()
oled = adafruit_ssd1306.SSD1306_I2C(WIDTH, HEIGHT, i2c, addr=0x3c)

# Datenbank connection aufbauen
conn = psycopg2.connect(dbname="dbbank", user="teko", password="teko123",host="127.0.0.1")
cur = conn.cursor()

# Main
try:
        # Zähler erstellen
        i = 0
        while True:
            # LED Lampe ausschalten
            GPIO.output(14, GPIO.LOW)

            # Display bereinigen
            oled.fill(0)
            oled.show()
         
            # Create blank image for drawing.
            # Make sure to create image with mode '1' for 1-bit color.
            #image = Image.new('1', (oled.width, oled.height))
         
            # Get drawing object to draw on image.
            #draw = ImageDraw.Draw(image)
         
            # Draw a white background
            #draw.rectangle((0, 0, oled.width, oled.height), outline=255, fill=255)
         
            # Draw a smaller inner rectangle
            #draw.rectangle((BORDER, BORDER, oled.width - BORDER - 1, oled.height - BORDER - 1),
            #               outline=0, fill=0)
         
            # Load default font.
            #font = ImageFont.load_default()
         
            #oled.text("ready",0,0,0)
            #oled.show()

            # Auslesung des Tokens / der Karte
            # UID und Username
            tid, t = reader.read()
            
            # Variablen in Konsole ausgeben
            print(tid)
            print(t)
        
            # Überprüfung der UID in der Tabelle User
            cur.execute("SELECT * FROM \"user\" where tag_id = %s", [tid])
            
            # Bedingung ob eine Zeile der Abfrage entspricht
            if cur.rowcount!=0:
                # Tabelleninhalt wird Variablen übergeben
                tag_id, username, name, firstname, budget, birthday = cur.fetchone()
            
                # Draw Some Text
                #text = "Hello World!"
                #text = (t)
                #(font_width, font_height) = font.getsize(t)
                #draw.text((oled.width//2 - font_width//2, oled.height//2 - font_height//2),
                #          t, font=font, fill=255)
        
                #draw.text((10,16),t,font=font,fill=255)
                
                # Überprüfung ob mehr als CHF 1.- buget vorhanden ist
                if(budget >= 1.00){
                    # CHF 1.- wird vom Budget abgezogen
                    budget = budget - 1
                    
                    # Darstellung vom Display Text
                    # username, Vorname, Nachname, Budget
                    oled.text(t,0,0,1)
                    oled.text(firstname,0,32,1)
                    oled.text(name,0,48,1)
                    oled.text(str(budget),0,64,1)

                    # LED Lampe einschalten
                    GPIO.output(14, GPIO.HIGH)

                }else{
                    # Darstellung vom Display Text
                    # Text, Budget
                    oled.text("Sie besitzen zu",0,0,1)
                    oled.text("wenig Budget",0,16,1)
                    oled.text(str(budget),0,32,1)
                }
                
                # Zähler Zurücksetzten
                i = 0
                
                # Ausgabe am Display
                oled.show()

                # Ausgabe Zeit der LED
                time.sleep(3)
                # LED Lampe ausschalten
                GPIO.output(14, GPIO.LOW)
                # Ausgabe Zeit vom Display
                time.sleep(7)

            else:
                if i == 2:
                    # Darstellung vom Display Text
                    # Text
                    oled.text("Eingabe 30 Sekunden",0,0,1)
                    oled.text("gesperrt",0,16,1)
                    oled.show()
                    time.sleep(30)
                else:
                    # Darstellung vom Display Text
                    # Text
                    oled.text("Fehler",0,0,1)
                    oled.show()
                    time.sleep(10)
                
                # Zähler mit 1 addieren
                i+=1
               
finally:
        
        
        #Close communication with the database
        cur.close()
        conn.close()
        GPIO.cleanup()